[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "lilac_os"
dynamic = ["version"]
description = "A simple Python OS project"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
dependencies = [
    "pyperclip==1.8.2",
    "PyQt5==5.15.11",
]

[project.optional-dependencies]
dev = [
    "black==24.8.0",
    "mypy==1.4.1",
    "pylint==3.2.7",
    "pytest==8.3.2",
]

[tool.hatch.envs.default]
features = [
  "dev",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/lilac_os"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true


[tool.black]
target-version = ['py38']
line-length = 88

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "W0511",  # fixme
]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]


[tool.hatch.envs.default.scripts]

# Application commands
app = "python -m lilac_os.main"
sandbox = "python -m sandbox.main"
export = "python tools/export_project_to_clip.py"

# Individual task commands
format = "black ."
type_check = "mypy src"
lint = "pylint src tests"
unit_test = "pytest"

# Main workflow commands
dev = ["format", "app"]
dev_strict = ["format", "type_check", "app"]
test = ["format", "unit_test"]
test_strict = ["format", "type_check", "unit_test"]

# Pre-commit workflows
precommit = ["format", "type_check", "lint", "unit_test"]